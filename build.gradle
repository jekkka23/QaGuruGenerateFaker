/*
plugins {
    id "java-library"
}
// говорим что пишем на java

repositories {
    mavenCentral()
}
// говорим, что будем использовать библиотеки MavenCentral

dependencies {
    testImplementation (
            "com.codeborne:selenide:7.3.2",
            "org.junit.jupiter:junit-jupiter-api:5.9.1",
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2'


    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.1"
}
// добавляем зависимости, готовые решения которые будем использовать

test {
    useJUnitPlatform()
}
// относится к JUnit, добавление кнопки play слева от @Test*/
plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
}

repositories {
    mavenCentral()
}


def allureVersion = "2.27.0"
def selenideVersion = "7.2.3"
def aspectjVersion = "1.9.19"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:5.10.2",
            "com.github.javafaker:javafaker:1.0.2",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'org.slf4j:slf4j-simple:2.0.7'
    )
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("type") != null && !System.getProperty("type").isEmpty()) {
            includeTags System.getProperty("type")
        }
    }
}